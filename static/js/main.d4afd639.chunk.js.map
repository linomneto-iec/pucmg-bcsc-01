{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","value","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","newValueProduct","scope","products","map","product","key","fromWei","owner","active","onClick","purchaseProduct","editProductPrice","editProductActive","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","loading","state","marketplace","methods","send","from","on","confirmationNumber","receipt","location","reload","console","error","productCount","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","Marketplace","networks","Contract","abi","address","i","concat","toConsumableArray","log","components_Navbar","role","components_Main","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4afd639.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://github.com/caleoleo\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Mercado Blockchain\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <h1>Adicionar Produto</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.productName.value\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\n          this.props.createProduct(name, price)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productName\"\n              type=\"text\"\n              ref={(input) => { this.productName = input }}\n              className=\"form-control\"\n              placeholder=\"Nome do produto\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productPrice\"\n              type=\"text\"\n              ref={(input) => { this.productPrice = input }}\n              className=\"form-control\"\n              placeholder=\"Preço do produto (em Ether)\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Adicionar produto</button>\n        </form>\n        <p>&nbsp;</p>\n        <h2>Comprar produto</h2>\n\n        <div>\n          <input\n            type=\"text\"\n            id=\"newValueProduct\"\n            ref={(input) => { this.newValueProduct = input }}\n            className=\"form-control\"\n            placeholder=\"Novo valor do produto\"\n          />\n        </div>\n\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Nome</th>\n              <th scope=\"col\">Preço</th>\n              <th scope=\"col\">Proprietário</th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"productList\">\n            {this.props.products.map((product, key) => {\n              return (\n                <tr key={key}>\n                  <th scope=\"row\">{product.id.toString()}</th>\n                  <td>{product.name}</td>\n                  <td>{window.web3.utils.fromWei(product.price.toString(), \"ether\")} Eth</td>\n                  <td>{product.owner}</td>\n                  <td>\n                    {product.active && this.props.account != product.owner\n                      ? <button\n                        name={product.id}\n                        value={product.price}\n                        onClick={(event) => {\n                          this.props.purchaseProduct(event.target.name, event.target.value)\n                        }}\n                        >\n                          Comprar\n                        </button>\n                      : null\n                    }\n                  </td>\n                  <td>\n                  {this.props.account == product.owner\n                      ?\n                        <button\n                          name={product.id}\n                          value={product.price}\n                          onClick={(event) => {\n                            this.props.editProductPrice(product.id, window.web3.utils.toWei(this.newValueProduct.value, \"ether\"))\n                          }}\n                        >Alterar valor</button>\n                      : null \n                  }\n                  </td>\n                  <td>\n                  {this.props.account == product.owner\n                    ?\n                    <button\n                      onClick={(event) => {\n                        this.props.editProductActive(product.id, !product.active)\n                      }}\n                    >{product.active ? 'Desativar produto': 'Ativar Produto' }</button>\n                    : null \n                  }\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        <p><a href=\"https://ropsten.etherscan.io/address/0x781c71bfe45d1c5d81fca75d17bb589cc72d63fc\" target=\"_blank\">Informação do contrato</a></p>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkId]\n    if (networkData) {\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({ marketplace })\n      const productCount = await marketplace.methods.productCount().call()\n      // console.log(productCount.toString())\n      this.setState({ productCount })\n      //Load products\n      for (let i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState({\n          products: [...this.state.products, product]\n        })\n      }\n      this.setState({ loading: false })\n      console.log(this.state.products)\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    }\n\n    // this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n  }\n\n  createProduct = (name, price) => {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\n      .on('confirmation', function(confirmationNumber, receipt) {\n        window.location.reload(false)\n      })\n      .on('error', console.error); // If a out of gas error, the second parameter is the receipt.\n  }\n  \n  purchaseProduct = (id, price) => {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\n      .on('confirmation', function(confirmationNumber, receipt) {\n        window.location.reload(false)\n      })\n      .on('error', console.error); // If a out of gas error, the second parameter is the receipt.\n  }\n\n  editProductPrice = (id, price) => {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.editProductPrice(id, price).send({ from: this.state.account })\n      .on('confirmation', function (confirmationNumber, receipt) {\n        window.location.reload(false);\n      })\n  }\n\n  editProductActive = (id, active) => {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.editProductActive(id, active).send({ from: this.state.account })\n      .on('confirmation', function (confirmationNumber, receipt) {\n        window.location.reload(false);\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              {this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                  account = {this.state.account}\n                  products = {this.state.products}\n                  createProduct = {this.createProduct}\n                  purchaseProduct = {this.purchaseProduct} \n                  editProductPrice = {this.editProductPrice} \n                  editProductActive = {this.editProductActive}\n                  />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}